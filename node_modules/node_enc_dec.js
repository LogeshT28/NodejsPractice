const crypto = require('crypto');

let msg = "nandha engineering college";
let key = crypto.scryptSync(msg, 'salt', 24); // Derive a 24-byte key
let iv = crypto.randomBytes(12); // Initialization vector

// HMAC SHA256
let enc_msg = crypto.createHmac('sha256', msg).update("Welcome node js", "utf-8").digest("hex
console.log(enc_msg);

// AES-192-CCM Encryption
let plaintext = "welcome to node js";
let cipher = crypto.createCipheriv('aes-192-ccm', key, iv, { authTagLength: 16 });

let ciphertext = cipher.update(plaintext, 'utf-8', 'hex');
ciphertext += cipher.final('hex');
let authTag = cipher.getAuthTag().toString('hex');

console.log(ciphertext);
console.log(authTag);

// AES-192-CCM Decryption
let decipher = crypto.createDecipheriv('aes-192-ccm', key, iv, { authTagLength: 16 });
decipher.setAuthTag(Buffer.from(authTag, 'hex'));

let decrypted = decipher.update(ciphertext, 'hex', 'utf-8');
decrypted += decipher.final('utf-8');

console.log(decrypted);
